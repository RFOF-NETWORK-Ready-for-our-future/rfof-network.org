name: RFOF Nano Perpetuum CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    strategy:
      matrix:
        server: [ubuntu-latest, liteserver-1, liteserver-2, BOx-to-BOx, Nano-Perpetuum-Mobile, other-server-1, other-server-2, other-server-3, other-server-4, other-server-5]

    runs-on: ${{ matrix.server }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        npm install
        pip install -r requirements.txt

    - name: Initialize blockchain languages
      run: |
        python setup_42.py
        python setup_420.py

    - name: Run hello_rfof_network.py
      run: python hello_rfof_network.py

  analyze_and_learn:
    strategy:
      matrix:
        server: [ubuntu-latest, liteserver-1, liteserver-2, BOx-to-BOx, Nano-Perpetuum-Mobile, other-server-1, other-server-2, other-server-3, other-server-4, other-server-5]

    runs-on: ${{ matrix.server }}

    steps:
    - name: Analyze text for learning processes
      run: python analyze_text.py "${{ secrets.TEXT_FILE }}"

    - name: Deploy analyzed modules
      run: python deploy_modules.py

  test:
    strategy:
      matrix:
        server: [ubuntu-latest, liteserver-1, liteserver-2, BOx-to-BOx, Nano-Perpetuum-Mobile, other-server-1, other-server-2, other-server-3, other-server-4, other-server-5]

    runs-on: ${{ matrix.server }}

    steps:
    - name: Run Node.js tests
      run: npm test

    - name: Run Python tests
      run: pytest

    - name: Test REST API endpoints
      run: |
        curl -X GET "https://rfofspidernet.de/api/transactions" -H "Authorization: Bearer ${{ secrets.API_KEY }}"
        curl -X GET "https://rfofspidernet.de/api/marketdata" -H "Authorization: Bearer ${{ secrets.API_KEY }}"

    - name: Test Websockets
      run: python websocket_test.py

    - name: Validate Blockchain Transactions
      run: python validate_transactions.py

    - name: Validate Data Storage Logic
      run: python validate_data_storage.py

  deploy:
    strategy:
      matrix:
        server: [ubuntu-latest, liteserver-1, liteserver-2, BOx-to-BOx, Nano-Perpetuum-Mobile, other-server-1, other-server-2, other-server-3, other-server-4, other-server-5]

    runs-on: ${{ matrix.server }}

    steps:
    - name: Deploy to production
      run: |
        scp -r ./build/* user@yourserver:/path/to/deployment
        ssh user@yourserver 'systemctl restart your-app-service'

    - name: Notify deployment
      run: curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment successful"}' ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Post deployment check
      run: |
        curl -X GET "https://rfofspidernet.de/api/status" -H "Authorization: Bearer ${{ secrets.API_KEY }}"
        curl -X GET "https://rfofspidernet.de/api/checkpoints" -H "Authorization: Bearer ${{ secrets.API_KEY }}"

    - name: Activate PRAI
      run: python activate_prai.py

  additional_steps:
    strategy:
      matrix:
        server: [ubuntu-latest, liteserver-1, liteserver-2, BOx-to-BOx, Nano-Perpetuum-Mobile, other-server-1, other-server-2, other-server-3, other-server-4, other-server-5]

    runs-on: ${{ matrix.server }}

    steps:
    - name: Test integration with Bitcoin/ETH/EGLD
